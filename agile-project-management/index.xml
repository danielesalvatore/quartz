<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Agile-project-managements on</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/</link><description>Recent content in Agile-project-managements on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://danielesalvatore.github.io/quartz/agile-project-management/index.xml" rel="self" type="application/rss+xml"/><item><title>Acceptance criteria</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/acceptance-criteria/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/acceptance-criteria/</guid><description>The checklist you will use to decide whether the User stories are done.
Link:
Definition of done</description></item><item><title>Agile</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/agile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/agile/</guid><description>Features:
Able to move quickly and easily Flexibility and the willingness and ability to change and adapt Done in pieces Agile project phases overlap and tasks are completed in iterations, which in Scrum are called Sprints.</description></item><item><title>Agile manifesto</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/agile-manifesto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/agile-manifesto/</guid><description>Values of the Agile manifesto: Individuals and interactions, over processes and tools Working software, over comprehensive documentation Customer collaboration over contract negotiation Responding to change, over following a plan Individuals and interactions, over processes and tools Working software, over comprehensive documentation Customer collaboration over contract negotiation Responding to change, over following a plan Twelve Principles Categories:</description></item><item><title>Agile Project Management</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/agile-project-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/agile-project-management/</guid><description>Topics:
Applying agile Scrum Agile Agile manifesto Business agility DevOps Disciplined Agile Delivery (DAD) Distinguishing Agile from Waterfall Extreme programming (XP) History of agile Interview questions Kanban Large-Scale Scrum (LeSS) Mission Scale agile Scaled Agile Framework (SAFe) Scrum of Scrums The Spotify Model VUCA Work in Progress</description></item><item><title>Agile team challenges</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/agile-team-challenges/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/agile-team-challenges/</guid><description>Challanges:
Value delivery Business collaboration Team dynamics and culture Value delivery [Agile manifesto](agile-project-management/agile-manifesto.md#Value delivery)
Signs:
Missing expected delivery dates Burned out Too many items &amp;ldquo;in progress&amp;rdquo; Work in Progress Solutions:</description></item><item><title>Applying agile</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/applying-agile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/applying-agile/</guid><description>Topics:
Agile team challenges Coaching an Agile team Coaching versus managing in Agile Common Agile coaching challenges Introducing Agile to an organization Release plans Value Value roadmap Value-driven delivery</description></item><item><title>Business agility</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/business-agility/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/business-agility/</guid><description>Incorporating Agile principles into the wide sphere of management.
Benefit:
Adopted to thrive in high VUCA environments.</description></item><item><title>Coaching an Agile team</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/coaching-an-agile-team/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/coaching-an-agile-team/</guid><description>Coaching:
Design the &amp;ldquo;plays&amp;rdquo; with the team Provide feedback to the team Celebrate and learn with the team Design the &amp;ldquo;plays&amp;rdquo; with the team Although the Scrum Master owns the playbook of Scrum, it should be created with the whole team.</description></item><item><title>Coaching versus managing in Agile</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/coaching-versus-managing-in-agile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/coaching-versus-managing-in-agile/</guid><description>Management is about giving direction, while coaching is about teaching.
Managing Coaching Managing Project manager&amp;rsquo;s responsibilities In Agile teams are self-organizing [Agile manifesto](agile-project-management/agile-manifesto.</description></item><item><title>Common Agile coaching challenges</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/common-agile-coaching-challenges/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/common-agile-coaching-challenges/</guid><description>Common challenges:
Managing a stable Product roadmap Incomplete implementation of Scrum Experiencing a lack of stability within the team Managing a stable product roadmap Unstable roadmap causes:</description></item><item><title>Daily Stand-up</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/daily-stand-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/daily-stand-up/</guid><description>This is where the team meets for 15 minutes or less every day of the Sprint to inspect their progress toward their goal.</description></item><item><title>Definition of done</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/definition-of-done/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/definition-of-done/</guid><description>Definition of Done refers to an agreed-upon set of items that must be completed before our user story or Backlog item can be considered complete.</description></item><item><title>Development team (or Developers)</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/development-team-or-developers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/development-team-or-developers/</guid><description>The people who do the work to build the product. (5 to 9 people)
The Development Team is responsible for how a team will deliver that product.</description></item><item><title>DevOps</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/devops/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/devops/</guid><description>Combination of:
Development Operations An organization and cultural movement that aims to increase the software delivery velocity, improve service reliability, and build shared ownership among software stakeholders.</description></item><item><title>Disciplined Agile Delivery (DAD)</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/disciplined-agile-delivery-dad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/disciplined-agile-delivery-dad/</guid><description>Disciplined Agile Delivery (DAD) is a hybrid approach that combines the strategies from various Agile frameworks, including Kanban, LeSS, Lean Development, Extreme Programming, Agile Modeling, and more.</description></item><item><title>Distinguishing Agile from Waterfall</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/distinguishing-agile-from-waterfall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/distinguishing-agile-from-waterfall/</guid><description>Agile is an iterative process, and Waterfall is more linear. Both have their merits, depending on the project.
Agile was created in response to the strict linear process of Waterfall</description></item><item><title>Empiricism</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/empiricism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/empiricism/</guid><description>Empiricism is the idea that true knowledge comes from actual, lived experience.
Based on the same Scrum pillars of Scrum.</description></item><item><title>Epic</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/epic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/epic/</guid><description>A group of collection of User stories.</description></item><item><title>Estimates</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/estimates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/estimates/</guid><description>Through estimation, we can find out how much work we have ahead of us.
Relative estimations Instead of trying to determine exactly how long a task will take, we compare the effort of that task to another task, and that becomes the estimate.</description></item><item><title>Extreme programming (XP)</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/extreme-programming-xp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/extreme-programming-xp/</guid><description>Project management methodologies
Aims to improve product quality and the ability to respond to changing customer needs Takes best practices for the development process to &amp;ldquo;extreme&amp;rdquo; levels XP wants to ensure that all of the pieces of the product will fit together properly.</description></item><item><title>History of agile</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/history-of-agile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/history-of-agile/</guid><description>Agile project management An approach to project and team management that embodies &amp;ldquo;agility&amp;rdquo; and is based on the Agile Manifesto.</description></item><item><title>Incremental</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/incremental/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/incremental/</guid><description>Work is divided into smaller chunks that build on each other.</description></item><item><title>Interview questions</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/interview-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/interview-questions/</guid><description>Questions:
What&amp;rsquo;s the difference between Agile and Waterfall project management? Distinguishing Agile from Waterfall Do they know it&amp;rsquo;s also about founding values that include customer collaboration, value delivery, and self-organizing teams?</description></item><item><title>Introducing Agile to an organization</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/introducing-agile-to-an-organization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/introducing-agile-to-an-organization/</guid><description>Introducing Agile to an organization:
Creating a sense of ownership Find an executive sponsor who also feels a sense of ownership for the change you&amp;rsquo;re creating.</description></item><item><title>Kanban</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/kanban/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/kanban/</guid><description>Project management methodologies
Visualization: provides transparent visual feedback Ensures that the project team only accepts a sustainable amount of in-progress work Work in Progress Flow of work Kanban boards are a visual tool used to manage tasks and workflows.</description></item><item><title>Large-Scale Scrum (LeSS)</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/large-scale-scrum-less/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/large-scale-scrum-less/</guid><description>Large-Scale Scrum (LeSS) is a framework that aims to maximize the Scrum team’s ability to deliver value and reduce waste in larger organizations.</description></item><item><title>Minimum Viable Product (MVP)</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/minimum-viable-product-mvp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/minimum-viable-product-mvp/</guid><description>A version of a product with just enough features to satisfy early customers.</description></item><item><title>Mission</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/mission/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/mission/</guid><description>A mission is a short statement that stays constant for your team throughout the process and gives them something to work toward.</description></item><item><title>Product backlog</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-backlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-backlog/</guid><description>The central artifact in Scrum, where all possible ideas, deliverables, features, or tasks are captured for the team to work on.</description></item><item><title>Product increment</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-increment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-increment/</guid><description>The product increment is what is produced after a given Sprint and is considered Releasable.</description></item><item><title>Product owner</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-owner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-owner/</guid><description>Responsible for what the team builds.
Build the right thing.
Value-driven delivery Responsibilities The product owner is responsible for continuously maximizing the value of the product and the work of the team.</description></item><item><title>Product vision</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-vision/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/product-vision/</guid><description>Product vision is when you set a vision, you&amp;rsquo;re making it clear what the team is responsible for and where your team&amp;rsquo;s boundaries are.</description></item><item><title>Reasons for Scrum's popularity</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/reasons-for-scrums-popularity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/reasons-for-scrums-popularity/</guid><description>Reasons for Scrum&amp;rsquo;s popularity:
Clear roles and responsibility, while continuously emphasizing the power of the team as a whole. Regular and predictable meeting and delivery schedules, formats, and outcomes.</description></item><item><title>Releasable</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/releasable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/releasable/</guid><description>When the team has developed a Minimum Viable Product (MVP), which has a set of implemented features or requirements.</description></item><item><title>Release plans</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/release-plans/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/release-plans/</guid><description>The dates on which a team expects to release a given feature to customers or users.
Release goal What you want to release List of backlog items Estimated release date Other relevant dates that impact a release Tips The Product owner and the Scrum Master must work together before releasing the plan Release plans need to connect the product roadmap with the team capacity and Velocity.</description></item><item><title>Scale agile</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scale-agile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scale-agile/</guid><description>Frameworks:
Scrum of Scrums Scaled Agile Framework (SAFe) Large-Scale Scrum (LeSS) Disciplined Agile Delivery (DAD) The Spotify Model Best practices Treat scaling models like SAFe, Scrum of Scrums, LeSS, etc.</description></item><item><title>Scaled Agile Framework (SAFe)</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scaled-agile-framework-safe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scaled-agile-framework-safe/</guid><description>The most popular scaled framework is the Scaled Agile Framework or SAFe.
SAFe is a Lean- Agile scaling framework that draws heavily on concepts from Kanban, Scrum, Extreme programming (XP), DevOps, and Design Thinking methodologies.</description></item><item><title>Scrum</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum/</guid><description>Agile is the foundational philosophy and mindset, while Scrum is a framework that materializes or brings that philosophy to life.</description></item><item><title>Scrum events</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-events/</guid><description>Events:
Sprint Sprint planning Daily Stand-up Sprint review Sprint retrospective Timeboxes Events are timeboxed:</description></item><item><title>Scrum Master</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-master/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-master/</guid><description>This role is responsible for ensuring that the team lives Agile Scrum values and Scrum principles, follows the processes and practices that the team agreed to, shares information with the larger project team, and also helps the team focus on doing their best work.</description></item><item><title>Scrum of Scrums</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum-of-scrums/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum-of-scrums/</guid><description>Scrum of Scrums is a technique for integrating the work of multiple, smaller Scrum teams working on the same project or solution.</description></item><item><title>Scrum pillars</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-pillars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-pillars/</guid><description>Scrum pillars:
Transparency Inspection Adaptation Transparency Make the most significant aspects of our work visible to those responsible for the outcome.</description></item><item><title>Scrum principles</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-principles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-principles/</guid><description>Principles:
Built-in instability Self-organizing teams Overlapping development phases Multi-learning Subtle control Organizational transfer of learning Built-in instability In the Scrum world, teams are given the freedom to achieve important outcomes with “challenging requirements.</description></item><item><title>Scrum roles</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-roles/</guid><description>Scrum roles:
Scrum Master Product owner Development team (or Developers) Scrum Teams are cross-functional. When a Scrum Team delivers something, it&amp;rsquo;s the accomplishment of the entire team.</description></item><item><title>Scrum values</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-values/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/scrum-values/</guid><description>Scrum values:
Commitment Courage Focus Openness Respect Commitment Personally committing to achieving the goals of the Scrum team.</description></item><item><title>Sprint</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint/</guid><description>The Sprint is the name of the time-boxed period in Scrum where work is done.
Within a Sprint, the amount of work is planned based on the historical capacity of the team and is made ready for the Sprint planning event.</description></item><item><title>Sprint backlog</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-backlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-backlog/</guid><description>The sprint backlog is the set of Product backlog items that are identified for completion during the upcoming Sprint.</description></item><item><title>Sprint planning</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-planning/</guid><description>The entire Scrum Team comes together and meets to confirm how much capacity, meaning time and people, are available during the Sprint.</description></item><item><title>Sprint retrospective</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-retrospective/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-retrospective/</guid><description>An essential meeting of up to 3 hours for the Scrum Team to take a step back, reflect, and identify improvements about how to work together as a team.</description></item><item><title>Sprint review</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-review/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/sprint-review/</guid><description>Done at the end of the Sprint.
A meeting with the entire Scrum Team where the product is demonstrated in order to determine which aspects are finished and which aren&amp;rsquo;t.</description></item><item><title>The Spotify Model</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/the-spotify-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/the-spotify-model/</guid><description>Another approach you may encounter is the “Spotify Model,” which we discussed in a previous reading. It is important to note that Spotify’s model is not a true Agile framework.</description></item><item><title>User stories</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/user-stories/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/user-stories/</guid><description>User stories are concise, specific descriptions of a feature told from the user’s perspective. They allow the team to create solutions centered on the user experience and help project managers capture and manage the Product backlog.</description></item><item><title>Value</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/value/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/value/</guid><description>Value can mean different things for each customer based on what they expect the product to accomplish.
Links:
[Agile manifesto](agile-project-management/agile-manifesto.</description></item><item><title>Value roadmap</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/value-roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/value-roadmap/</guid><description>Value roadmap:
An Agile way of mapping out the product development process It can be used for all types of business A guide that demonstrates Where to go How to get there What to accomplish along the way in order to maximize the Value It has three components:</description></item><item><title>Value-driven delivery</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/value-driven-delivery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/applying-agile/value-driven-delivery/</guid><description>Value-driven delivery means you and your team are focused on delivering a product of high Value.
How to ensure you are building something value-driven:</description></item><item><title>Velocity</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/velocity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/scrum/velocity/</guid><description>The measure of how many points the team burns down in a given Sprint.
Often calculated as the average of the last three sprints.</description></item><item><title>VUCA</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/vuca/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/vuca/</guid><description>VUCA is an acronym that defines the conditions that affect organizations in a changing and complex world.
Volatility Uncertainty Complexity Ambiguity Volatility Volatility refers to the rate of change and churns in a business or situation Uncertainty Uncertainty refers to the lack of predictability or high potential for surprise.</description></item><item><title>Work in Progress</title><link>https://danielesalvatore.github.io/quartz/agile-project-management/work-in-progress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://danielesalvatore.github.io/quartz/agile-project-management/work-in-progress/</guid><description>Work in progress
Limit Tasks are limited to what the team can actually handle during a certain amount of time.</description></item></channel></rss>